说明：sssy.v.1.0是针对沁源的SSSY最初版
时间：2014.2.20
变动：
1.修正了角色登录的BUG
2.修正了工作任务的BUG

________________________________________________________________________________________________
说明：SSSY.v.1.1 开始增加沁源征管模块
时间：2014.4.10
变动：
1.修改了js/page/menu_mgr.js 增加了order 显示顺序字段
2.修改了js/page/menu_modify.js 增加了order 显示顺序字段
3.修改了js/page/menu_add.js 增加了order 显示顺序字段
4.修改了MenuAction_showMenuList方法
5.完成了菜单显示顺序的调整，实现了动态的调整菜单显示顺序
6.备份了数据库修改菜单功能的SQL在DOC下

________________________________________________________________________________________________
说明：SSSY.v.1.1 开始编写税务登记情况查询模块
时间：2014.5.25

变动：
1.完成税务登记模块
2.编写了tax_collection_manager.js模块用于显示查询细节的Ext窗口
3.完成发票查询的Input问题
________________________________________________________________________________________________

版本：SSSY.v.1.1
时间：2014.6.8

变动：
1.修正了My97 IE8 显示NULL问题
2.修正了纳税人信息Suggestion模块的IE8下面的Enter 获取的纳税人识别号不对的问题（是由于$("li").attr("value")在IE下value 属性是无法获取的）
3.修正了纳税人信息Suggestion模块的IE8下面鼠标Hover无法响应的问题、修正了鼠标点击无法响应的问题
4.增加了TipsConditionUI界面
5.增加TipsTable界面



————————————————————————————————————————————————————————————————————————————————————————————————
问题：
1.不记录BigIndustryDao是什么时候改的了
先在这里备份下，然后改成1.0版本的BigIndustryDao

package com.tyut.sssy.base.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import com.tyut.sssy.base.domain.BigIndustry;
import com.tyut.sssy.utils.db.C3P0Util;

public class BigIndustryDao {

    public List<BigIndustry> getBigIndustryList() {
        Connection conn = null;
        String sql = "select * from dm_hydl";
        PreparedStatement ps = null;
        ResultSet rs = null;
        List<BigIndustry> list = new ArrayList<BigIndustry>();

        BigIndustry bigIndustry = null;
        try {

            // C3P0创建连接
            conn = C3P0Util.getConnection();
            ps = conn.prepareStatement(sql);

            rs = ps.executeQuery();

            while (rs.next()) {
                bigIndustry = new BigIndustry();
                bigIndustry.setHydlDm(rs.getString("hydl_dm"));
                bigIndustry.setMc(rs.getString("mc"));
                bigIndustry.setJc(rs.getString("jc"));
                bigIndustry.setCyDm(rs.getString("cy_dm"));
                bigIndustry.setGmlxdm(rs.getString("gylx_dm"));

                list.add(bigIndustry);
            }
        } catch (SQLException e) {
            e.printStackTrace();
        } finally {

            // C3P0关闭连接
            C3P0Util.close(ps, rs, conn);
        }

        return list;
    }

    public BigIndustry getBigIndustryById(String hy) {
        Connection conn = null;
        String sql = "select * from dm_hydl where hydl_dm = ?";
        PreparedStatement ps = null;
        ResultSet rs = null;

        BigIndustry bigIndustry = null;
        try {
            // C3P0创建连接
            conn = C3P0Util.getConnection();
            ps = conn.prepareStatement(sql);

            ps.setString(1, hy);

            rs = ps.executeQuery();

            while (rs.next()) {
                bigIndustry = new BigIndustry();
                bigIndustry.setHydlDm(rs.getString("hydl_dm"));
                bigIndustry.setMc(rs.getString("mc"));
                bigIndustry.setJc(rs.getString("jc"));
                bigIndustry.setCyDm(rs.getString("cy_dm"));
                bigIndustry.setGmlxdm(rs.getString("gylx_dm"));
            }
        } catch (SQLException e) {
            e.printStackTrace();
        } finally {

            // C3P0关闭连接
            C3P0Util.close(ps, rs, conn);
        }

        return bigIndustry;
    }

    /**
     * 获取主要行业
     *
     * @return
     */
    public List<BigIndustry> getMainIndustryList() {
        Connection conn = null;
        String sql = "select * from dm_hydl where zdhybz = 'Y'";
        PreparedStatement ps = null;
        ResultSet rs = null;
        List<BigIndustry> list = new ArrayList<BigIndustry>();

        BigIndustry bigIndustry = null;
        try {

            // C3P0创建连接
            conn = C3P0Util.getConnection();
            ps = conn.prepareStatement(sql);

            rs = ps.executeQuery();

            while (rs.next()) {
                bigIndustry = new BigIndustry();
                bigIndustry.setHydlDm(rs.getString("hydl_dm"));
                bigIndustry.setMc(rs.getString("mc"));
                bigIndustry.setJc(rs.getString("jc"));
                bigIndustry.setCyDm(rs.getString("cy_dm"));
                bigIndustry.setGmlxdm(rs.getString("gylx_dm"));

                list.add(bigIndustry);
            }
        } catch (SQLException e) {
            e.printStackTrace();
        } finally {

            // C3P0关闭连接
            C3P0Util.close(ps, rs, conn);
        }

        return list;
    }

}








